This file is part of MXE. See LICENSE.md for licensing information.

Contains ad hoc patches for cross building.

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jonas Kvinge <jonas@jkvinge.net>
Date: Wed, 8 Sep 2021 19:28:49 +0200
Subject: [PATCH 1/1] Build fixes


diff --git a/src/Makefile.shlib b/src/Makefile.shlib
index 1111111..2222222 100644
--- a/src/Makefile.shlib
+++ b/src/Makefile.shlib
@@ -85,7 +85,7 @@ else
 # Naming convention for dynamically loadable modules
 shlib		= $(NAME)$(DLSUFFIX)
 endif
-stlib		= lib$(NAME).a
+stlib		= lib$(NAME).dll.a
 
 ifndef soname
 # additional flags for backend modules
diff --git a/src/backend/Makefile b/src/backend/Makefile
index 1111111..2222222 100644
--- a/src/backend/Makefile
+++ b/src/backend/Makefile
@@ -85,11 +85,11 @@ ifeq ($(PORTNAME), win32)
 LIBS += -lsecur32
 
 postgres: $(OBJS) $(WIN32RES)
-	$(CC) $(CFLAGS) $(call expand_subsys,$(OBJS)) $(WIN32RES) $(LDFLAGS) $(LDFLAGS_EX) -Wl,--stack=$(WIN32_STACK_RLIMIT) -Wl,--export-all-symbols -Wl,--out-implib=libpostgres.a $(LIBS) -o $@$(X)
+	$(CC) $(CFLAGS) $(call expand_subsys,$(OBJS)) $(WIN32RES) $(LDFLAGS) $(LDFLAGS_EX) -Wl,--stack=$(WIN32_STACK_RLIMIT) -Wl,--export-all-symbols -Wl,--out-implib=libpostgres.dll.a $(LIBS) -o $@$(X)
 
 # libpostgres.a is actually built in the preceding rule, but we need this to
 # ensure it's newer than postgres; see notes in src/backend/parser/Makefile
-libpostgres.a: postgres
+libpostgres.dll.a: postgres
 	touch $@
 
 endif # win32
@@ -203,7 +203,7 @@ endif
 endif
 ifeq ($(PORTNAME), win32)
 ifeq ($(MAKE_DLL), true)
-	$(INSTALL_DATA) libpostgres.a '$(DESTDIR)$(libdir)/libpostgres.a'
+	$(INSTALL_DATA) libpostgres.dll.a '$(DESTDIR)$(libdir)/libpostgres.dll.a'
 endif
 endif
 	$(MAKE) -C catalog install-data
@@ -268,7 +268,7 @@ endif
 endif
 ifeq ($(PORTNAME), win32)
 ifeq ($(MAKE_DLL), true)
-	rm -f '$(DESTDIR)$(libdir)/libpostgres.a'
+	rm -f '$(DESTDIR)$(libdir)/libpostgres.dll.a'
 endif
 endif
 	$(MAKE) -C catalog uninstall-data
@@ -290,7 +290,7 @@ ifeq ($(PORTNAME), cygwin)
 	rm -f postgres.dll libpostgres.a
 endif
 ifeq ($(PORTNAME), win32)
-	rm -f postgres.dll libpostgres.a $(WIN32RES)
+	rm -f postgres.dll libpostgres.dll.a $(WIN32RES)
 endif
 
 distclean: clean
diff --git a/src/bin/psql/command.c b/src/bin/psql/command.c
index 1111111..2222222 100644
--- a/src/bin/psql/command.c
+++ b/src/bin/psql/command.c
@@ -23,7 +23,7 @@
 #include <sys/stat.h>			/* for stat() */
 #endif
 
-#include "catalog/pg_class_d.h"
+#include "../../backend/catalog/pg_class_d.h"
 #include "command.h"
 #include "common.h"
 #include "common/logging.h"
diff --git a/src/bin/psql/describe.c b/src/bin/psql/describe.c
index 1111111..2222222 100644
--- a/src/bin/psql/describe.c
+++ b/src/bin/psql/describe.c
@@ -15,10 +15,10 @@
 #include <ctype.h>
 
 #include "catalog/pg_am.h"
-#include "catalog/pg_attribute_d.h"
-#include "catalog/pg_cast_d.h"
-#include "catalog/pg_class_d.h"
-#include "catalog/pg_default_acl_d.h"
+#include "../../backend/catalog/pg_attribute_d.h"
+#include "../../backend/catalog/pg_cast_d.h"
+#include "../../backend/catalog/pg_class_d.h"
+#include "../../backend/catalog/pg_default_acl_d.h"
 #include "common.h"
 #include "common/logging.h"
 #include "describe.h"
diff --git a/src/common/relpath.c b/src/common/relpath.c
index 1111111..2222222 100644
--- a/src/common/relpath.c
+++ b/src/common/relpath.c
@@ -18,7 +18,7 @@
 #include "postgres_fe.h"
 #endif
 
-#include "catalog/pg_tablespace_d.h"
+#include "../backend/catalog/pg_tablespace_d.h"
 #include "common/relpath.h"
 #include "storage/backendid.h"
 
diff --git a/src/fe_utils/print.c b/src/fe_utils/print.c
index 1111111..2222222 100644
--- a/src/fe_utils/print.c
+++ b/src/fe_utils/print.c
@@ -29,7 +29,7 @@
 #include <termios.h>
 #endif
 
-#include "catalog/pg_type_d.h"
+#include "../backend/catalog/pg_type_d.h"
 #include "fe_utils/mbprint.h"
 #include "fe_utils/print.h"
 
diff --git a/src/include/catalog/pg_am.h b/src/include/catalog/pg_am.h
index 1111111..2222222 100644
--- a/src/include/catalog/pg_am.h
+++ b/src/include/catalog/pg_am.h
@@ -19,7 +19,7 @@
 #define PG_AM_H
 
 #include "catalog/genbki.h"
-#include "catalog/pg_am_d.h"
+#include "../backend/catalog/pg_am_d.h"
 
 /* ----------------
  *		pg_am definition.  cpp turns this into
diff --git a/src/include/catalog/pg_attribute.h b/src/include/catalog/pg_attribute.h
index 1111111..2222222 100644
--- a/src/include/catalog/pg_attribute.h
+++ b/src/include/catalog/pg_attribute.h
@@ -23,7 +23,7 @@
 #define PG_ATTRIBUTE_H
 
 #include "catalog/genbki.h"
-#include "catalog/pg_attribute_d.h"
+#include "../../backend/catalog/pg_attribute_d.h"
 
 /* ----------------
  *		pg_attribute definition.  cpp turns this into
diff --git a/src/include/storage/lwlock.h b/src/include/storage/lwlock.h
index 1111111..2222222 100644
--- a/src/include/storage/lwlock.h
+++ b/src/include/storage/lwlock.h
@@ -100,7 +100,7 @@ extern PGDLLIMPORT NamedLWLockTranche *NamedLWLockTrancheArray;
 extern PGDLLIMPORT int NamedLWLockTrancheRequests;
 
 /* Names for fixed lwlocks */
-#include "storage/lwlocknames.h"
+#include "../../backend/storage/lmgr/lwlocknames.h"
 
 /*
  * It's a bit odd to declare NUM_BUFFER_PARTITIONS and NUM_LOCK_PARTITIONS
diff --git a/src/include/utils/elog.h b/src/include/utils/elog.h
index 1111111..2222222 100644
--- a/src/include/utils/elog.h
+++ b/src/include/utils/elog.h
@@ -68,7 +68,7 @@
 #define ERRCODE_IS_CATEGORY(ec)  (((ec) & ~((1 << 12) - 1)) == 0)
 
 /* SQLSTATE codes for errors are defined in a separate file */
-#include "utils/errcodes.h"
+#include "../../backend/utils/errcodes.h"
 
 /*
  * Provide a way to prevent "errno" from being accidentally used inside an
